version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "8082:15672"
  rendercontrol:
    image: rendercontrol:latest
    build: 
      context: ./rendercontrol
      dockerfile: Dockerfile
    ports:
     - "5000:5000"
    environment:
     - FLASK_DEBUG=1
     - FLASK_APP=main.py
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: python ./main.py control
  rayserver:
    image: rayserver:latest
    build:
      context: .
      dockerfile: ./embree/Dockerfile
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: ./result rays
  occlusionserver:
    image: rayserver:latest
    build:
      context: .
      dockerfile: ./embree/Dockerfile
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: ./result occlusion
  shadeserver:
    image: shadeserver:latest  
    build:
      context: .
      dockerfile: ./shade/Dockerfile
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: ./result   
  renderwriter:
    image: renderwriter:latest  
    build: 
      context: ./writer
      dockerfile: Dockerfile
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: python ./writer.py
  raygenerator:
    image: raygenerator:latest  
    build:
      context: .
      dockerfile: ./raygenerator/Dockerfile
    volumes:
     - ".:/usr/src//app"
    links:
      - rabbitmq
    command: ./result 
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
